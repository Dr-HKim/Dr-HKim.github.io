VAR4=BOK_item_temp[4],
VAR5=BOK_item_temp[5],
VAR6=BOK_item_temp[6],
VAR7=BOK_item_temp[7],
VAR8=BOK_item_temp[8],
VAR9=BOK_item_temp[9],
VAR10=BOK_item_temp[10],
VAR11=BOK_item_temp[11])
BOK_item[[j]]<-BOK_item_temp_dt
}
BOK_total[[i]] <- rbindlist(BOK_item)
}
RESULTS <- rbindlist(BOK_total)
RESULTS <- RESULTS[which(!is.na(RESULTS$VAR2)),]
RESULTS$VAR12 <- as.numeric(as.character(RESULTS$VAR10))
RESULTS$VAR13 <- as.numeric(as.character(RESULTS$VAR11))
names(RESULTS) <- c("STAT","STAT_note","ITEM1","ITEM1_note","ITEM2","ITEM2_note","ITEM3","ITEM3_note","VAR9","VAR10","VAR11","DATE","VALUE")
RESULTS$ITEMCODE <- trimws(paste0(RESULTS$ITEM1,RESULTS$ITEM2,RESULTS$ITEM3))
return(RESULTS)
}
# 전체자료: 9.1.1.1 기업경기실사지수(BSI)-전국실적
BOK9111 <- MYBOK(AUTH_KEY="8YXOSADLRB7ZSISVACCO",REQ_TYPE="xml",LANG="kr",START_COUNT="1",END_COUNT="100000",
CYCLE_TYPE="MM",START_DATE="200301",END_DATE="201810",
STAT_CODE="041Y013", # 9.1.1.1 기업경기실사지수(BSI)-전국실적
ITEM_1="?",ITEM_2="?",ITEM_3="?")
BOK9111_CAST <- cast(BOK9111,DATE~ITEMCODE, value = "VALUE" )
BOK9111_1 <- BOK9111_CAST[,c("DATE","C0000AA","Y9900AA","X5000AA","X6000AA")]
View(BOK9111_1)
# 전체자료: 9.1.1.2 기업경기실사지수(BSI)-전국전망
BOK9112 <- MYBOK(AUTH_KEY="8YXOSADLRB7ZSISVACCO",REQ_TYPE="xml",LANG="kr",START_COUNT="1",END_COUNT="100000",
CYCLE_TYPE="MM",START_DATE="200301",END_DATE="201810",
STAT_CODE="041Y014", # 9.1.1.2 기업경기실사지수(BSI)-전국전망
ITEM_1="?",ITEM_2="?",ITEM_3="?")
BOK9112_CAST <- cast(BOK9112,DATE~ITEMCODE, value = "VALUE" )
TMP <- merge(BOK9111_CAST[,c("DATE","C0000AA","Y9900AA","X5000AA","X6000AA")], BOK9112_CAST[,c("DATE","C0000BA","Y9900BA","X5000BA","X6000BA")])
View(TMP)
TMP$YYYYMM <- TMP$DATE
TMP$DATE <- as.Date(as.character(TMP$YYYYMM*100+1), format = '%Y%m%d')
View(TMP)
plot.ts(TMP$C0000AA)
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## jekyll 블로그 디렉토리 설정
base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
setwd(base)
blogdown:::insert_image_addin()
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## jekyll 블로그 디렉토리 설정
base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
setwd(base)
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## jekyll 블로그 디렉토리 설정
base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
setwd(base)
## Subfolder 에 있는 Rmd 파일 읽어오기
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
## 폴더 경로 설정
figs.path <- "assets/article_images/"
figs.path <- "_Rmd/"
posts.path <- "_posts/"
require(knitr)
for (filename in FILELIST) {
# Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
# 파일 경로 설정
fig.path <- paste0(figs.path, sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
# suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
file.rename(out.file, paste0(posts.path, out.file))
}
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## jekyll 블로그 디렉토리 설정
base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
setwd(base)
summary(cars)
summary(cars)
summary(cars)
plot(cars)
blogdown:::insert_image_addin()
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## jekyll 블로그 디렉토리 설정
base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
setwd(base)
## Subfolder 에 있는 Rmd 파일 읽어오기
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
## 폴더 경로 설정
figs.path <- "assets/article_images/"
posts.path <- "_posts/R/"
require(knitr)
for (filename in FILELIST) {
# Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
# 파일 경로 설정
fig.path <- paste0(figs.path, sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
# suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
file.rename(out.file, paste0(posts.path, out.file))
}
this.dir <- dirname(parent.frame(2)$ofile)
getSrcDirectory()
sys.frame(1)$ofile
sys.frame(1)
?render_jekyll()
render_jekyll(highlight = "pygments")
# jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
# Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
# 파일 이름 지정
# filename <- "2016-01-17-test.Rmd"
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
# filename <- FILELIST[2]
for (filename in FILELIST){
# 폴더 경로들
figs.path <- "assets/article_images/"
posts.path <- "_posts/Rmd/"
# Rmd -> md 변환
require(knitr)
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
file
### 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
### suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
### 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
library(readr)
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
summary(cars)
plot(cars)
summary(cars)
plot(cars)
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
x <- 1
x
y <- 2
y
x+y
1+1
x <- 1
x <- 1
x
y <- 100
x+y
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## Rmd 파일 이름을 수정할 때를 대비하여, 기존의 md 파일을 모두 지우는 코드 필요
## /_Rmd/ 하위폴더에 있는 그림 파일들을 /assets/article_images/ 로 복사하는 코드 필요
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## Rmd 파일 이름을 수정할 때를 대비하여, 기존의 md 파일을 모두 지우는 코드 필요
## /_Rmd/ 하위폴더에 있는 그림 파일들을 /assets/article_images/ 로 복사하는 코드 필요
## R Markdown 으로 Github Pages 블로깅을 하기 위해 Rmd -> md 변환하는 코드
## 참고: http://otzslayer.github.io/r/jekyll-with-R-markdown/
## 라이브러리 불러오기
library(knitr)
library(readr)
## jekyll 블로그 디렉토리 설정
base.dir <- "C:/Clouds/GitHub/Dr-HKim.github.io"
setwd(base.dir)
## Rmd 파일이 저장된 디렉토리(./_Rmd) 지정
rmds <- "_Rmd"
## 파일 이름 지정
FILELIST <- list.files(path= "./_Rmd", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST){
## 폴더 경로들
figs.path <- "assets/article_images/" # 그림이 저장될 경로
posts.path <- "_posts/Rmd/"           # 변환된 md 파일이 저장될 경로
## Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
file <- paste0(rmds, "/", filename)
## 파일 경로 설정
fig.path <- paste0(figs.path, "FILES_", sub(".Rmd$", "", basename(file)), "/")
opts_chunk$set(fig.path = fig.path)
## suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
## 파일 변환 및 경로 지정
out.file <- basename(knit(file)) # working directory (base.dir) 에 저장됨
file.rename(out.file, paste0(posts.path, out.file)) # 원하는 폴더로 이동
}
## Rmd 를 MD 로 변환한 파일에서 이미지 링크를 수정
MD_FILELIST <- list.files(path= "./_posts/Rmd", pattern = ".*.md") # subdirectory 에 있는 *.md 파일 리스트 작성
for (md_filename in MD_FILELIST) {
file <- paste0("_posts/Rmd/", md_filename)
lines_md_filename <- read_lines(file)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("\\(FILES_", "\\(/assets/article_images/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, file)
}
## Rmd 파일 이름을 수정할 때를 대비하여, 기존의 md 파일을 모두 지우는 코드 필요
## /_Rmd/ 하위폴더에 있는 그림 파일들을 /assets/article_images/ 로 복사하는 코드 필요
