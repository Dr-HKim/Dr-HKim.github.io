getwd()
require(knitr)
plot(cars)
summary(cars)
knit_with_parameters('C:/DataAnalysis/MY181118_RMarkdown/RMD_to_MD/2018-11-18-RMD-TEST-01.Rmd')
getwd()
## jekyll 블로그 디렉토리 설정
# base <- "C:/Clouds/GitHub/Dr-HKim.github.io"
base<- "C:/DataAnalysis/MY181118_RMarkdown/RMD_to_MD"
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[1]
filename
require(knitr)
file <- paste0(rmds, "/", filename)
## Rmd 파일이 저장된 디렉토리 지정
rmds <- "_Rmd"
file
file <- paste0(rmds, "/", filename)
file
file0 <- paste0(rmds, "/", filename)
file0
file <- paste0("_posts/", filename)
file
basename(file)
file <- paste0("_posts/", filename)
file
knit(file)
knit(filename)
fig.path
# 파일 경로 설정
figs.path <- "assets/article_images/"
fig.path <- paste0(figs.path, sub(".Rmd$", "", basename(file)), "/")
fig.path
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "/")
fig.path
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
opts_chunk$set(fig.path = fig.path)
# suppress messages
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F)
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file <- paste0("_posts/", filename)
file <- paste0(filename)
file
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
paste0(posts.path, out.file)
## 폴더 경로 설정
posts.path <- "_posts/R/"
paste0(posts.path, out.file)
render_jekyll(highlight = "pygments")
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[1]
filename
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[1]
filename
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(filename)), "_files", "/")
fig.path
opts_chunk$set(fig.path = fig.path)
require(knitr)
opts_chunk$set(fig.path = fig.path)
# Rmd -> md 변환
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
require(knitr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[1]
filename
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
fig.path
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
require(knitr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[2]
filename
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0(sub(".Rmd$", "", basename(file)), "_files", "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
# opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
require(knitr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[2]
filename
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
# opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
require(knitr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
FILELIST
filename <- FILELIST[1]
filename
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
opts_knit$set(base.url="/")
# opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
FILELIST
FILELIST2 <- sub(".Rmd$", ".md$", FILELIST)
FILELIST2
FILELIST2 <- sub(".Rmd$", ".md", FILELIST)
FILELIST2
filename <- FILELIST[2]
filename
file <- paste0(filename)
file
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
# Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
# 파일 변환 및 경로 지정
out.file <- basename(knit(file))
# file.rename(out.file, paste0(posts.path, out.file))
# paste0(posts.path, out.file)
MD_FILELIST <- sub(".Rmd$", ".md", FILELIST)
MD_FILELIST
md_filename <- MD_FILELIST[1]
md_filename
readLines(md_filename)
md_filename <- MD_FILELIST[2]
md_filename
readLines(md_filename)
read_lines(md_filename)
?read_lines()
??read_lines()
library(readr)
read_lines(md_filename)
lines_md_filename <- read_lines(md_filename)
dim(lines_md_filename)
length(lines_md_filename)
lines_md_filename
startsWith(lines_md_filename[22],"![")
startsWith(lines_md_filename[21],"![")
lines_md_filename <- read_lines(md_filename)
lines_md_filename
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("](FILES_", "](/posts/FILES_", lines_md_filename[i])
}
}
lines_md_filename
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("FILES_", "/posts/FILES_", lines_md_filename[i])
}
}
lines_md_filename
TEXTFILE <- do.call("c", lines_md_filename)
out.file <- lines_md_filename
write(lines_md_filename,"tmp.md")
Encoding(lines_md_filename) <- "UTF-8"
write(lines_md_filename,"tmp.md")
Encoding(lines_md_filename) <- "UTF-8"
lines_md_filename
write(lines_md_filename,"tmp.md")
write(lines_md_filename,"tmp.md")
?write
library(readr)
lines_md_filename <- read_lines(md_filename)
lines_md_filename
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("FILES_", "/posts/FILES_", lines_md_filename[i])
}
}
Encoding(lines_md_filename)
Encoding(lines_md_filename) <- "UTF-8"
Encoding(lines_md_filename)
Encoding(lines_md_filename[1]) <- "UTF-8"
Encoding(lines_md_filename)
write(lines_md_filename,"tmp.txt")
write_lines(lines_md_filename, "tmp.txt")
write_lines(lines_md_filename, "tmp.md")
md_filename
write_lines(lines_md_filename, md_filename)
require(knitr)
library(readr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST) {
file <- paste0(filename)
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
## Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
## 파일 변환 및 경로 지정
out.file <- basename(knit(file))
}
MD_FILELIST <- sub(".Rmd$", ".md", FILELIST)
for (md_filename in MD_FILELIST) {
lines_md_filename <- read_lines(md_filename)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("FILES_", "/posts/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, md_filename)
}
require(knitr)
library(readr)
## *.Rmd 파일 불러오기
FILELIST <- list.files(path= "./", pattern = ".*.Rmd") # subdirectory 에 있는 *.Rmd 파일 리스트 작성
for (filename in FILELIST) {
file <- paste0(filename)
## 그림파일 경로 설정
fig.path <- paste0("FILES_", sub(".Rmd$", "", basename(file)), "/")
fig.path
## Rmd -> md 변환
opts_chunk$set(fig.path = fig.path) # 그림파일 경로 설정
render_jekyll(highlight = "pygments")
# opts_knit$set(base.url="/")
opts_knit$set(base.url="")
opts_chunk$set(cache = F, warning = F, message = F, cache.path = "_cache/", tidy = F) # suppress messages
## 파일 변환 및 경로 지정
out.file <- basename(knit(file))
}
MD_FILELIST <- sub(".Rmd$", ".md", FILELIST)
for (md_filename in MD_FILELIST) {
lines_md_filename <- read_lines(md_filename)
for (i in 1:length(lines_md_filename)){
if (startsWith(lines_md_filename[i],"![")) {
lines_md_filename[i] <- sub("FILES_", "/posts/FILES_", lines_md_filename[i])
}
}
write_lines(lines_md_filename, md_filename)
}
